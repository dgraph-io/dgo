/*
 * SPDX-FileCopyrightText: © Hypermode Inc. <hello@hypermode.com>
 * SPDX-License-Identifier: Apache-2.0
 */

// Style guide for Protocol Buffer 3.
// Use CamelCase (with an initial capital) for message names – for example,
// SongServerRequest. Use underscore_separated_names for field names – for
// example, song_name.

syntax = "proto3";

package api.v25;

option go_package = "github.com/dgraph-io/dgo/v240/protos/api.v25";

option java_package = "io.dgraph.v25";
option java_outer_classname = "DgraphProto";

service Dgraph {
  rpc Ping(PingRequest) returns (PingResponse) {}

  rpc SignInUser(SignInUserRequest) returns (SignInUserResponse) {}
  rpc Alter(AlterRequest) returns (AlterResponse) {}
  rpc RunDQL(RunDQLRequest) returns (RunDQLResponse) {}

  rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse) {}
  rpc DropNamespace(DropNamespaceRequest) returns (DropNamespaceResponse) {}
  rpc UpdateNamespace(UpdateNamespaceRequest) returns (UpdateNamespaceResponse) {}
  rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse) {}
}

message PingRequest {}

message PingResponse {
  string version = 1;
}

message SignInUserRequest {
  string user_id = 1;
  string password = 2;
  string refresh_token = 3;
}

message SignInUserResponse {
  string access_jwt = 1;
  string refresh_jwt = 2;
}

message AlterRequest {
  AlterOp op = 1;
  string ns_name = 2;
  string schema = 3;
  bool run_in_background = 4;
  string predicate_to_drop = 5;
  string type_to_drop = 6;
}

message AlterResponse {}

enum AlterOp {
  NONE = 0;
  DROP_ALL = 1;
  DROP_ALL_IN_NS = 2;
  DROP_DATA_IN_NS = 3;
  DROP_PREDICATE_IN_NS = 4;
  DROP_TYPE_IN_NS = 5;
  SCHEMA_IN_NS = 6;
}

message RunDQLRequest {
  string ns_name = 1;
  string dql_query = 2;
  map<string, string> vars = 3;
  bool read_only = 4;
  bool best_effort = 5;
}

message RunDQLResponse {}

message CreateNamespaceRequest {
  string ns_name = 1;
}

message CreateNamespaceResponse {}

message DropNamespaceRequest {
  string ns_name = 1;
}

message DropNamespaceResponse {}

message UpdateNamespaceRequest {
  string ns_name = 1;
  string rename_to_ns = 2;
}

message UpdateNamespaceResponse {}

message ListNamespacesRequest {}

message ListNamespacesResponse {
  map<string, Namespace> ns_list = 1;
}

message Namespace {
  string name = 1;
  uint64 id = 2;
}
